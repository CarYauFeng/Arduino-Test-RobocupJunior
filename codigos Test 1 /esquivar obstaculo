#include<NewPing.h>

int ENA = 10;  
int IN1 = 4; 
int IN2 = 5; 

int ENB = 9;  
int IN3 = 6; 
int IN4 = 7; 


int RIGHT = A0; 
int LEFT = A1;  

#define TRIG A2 
#define ECHO A3 
#define MAX_DISTANCE 100 

NewPing sonar(TRIG, ECHO, MAX_DISTANCE); 

void setup() {

pinMode(ENA, OUTPUT);
pinMode(ENB, OUTPUT); 
pinMode(IN1, OUTPUT); 
pinMode(IN2, OUTPUT); 
pinMode(IN3, OUTPUT); 
pinMode(IN4, OUTPUT); 
pinMode(RIGHT, INPUT); 
pinMode(LEFT, INPUT);  

}

void loop() {
    
delay(70);
int distance = sonar.ping_cm();
if (distance == 0) {
  distance = 30;
}
if(distance <=15) {   
  Stop();
  delay(100);
  turnRight();
  delay(580);
  moveForward();
  delay(450);
  turnLeft();
  delay(550);
  moveForward();
  delay(700);
  turnLeft();
  delay(500);
  moveForward();
  delay(480);
  turnRight();
  delay(500);
 
}
if (analogRead(RIGHT)<=35 && analogRead(LEFT)<=35) {  
  analogWrite(ENA, 80);  
  analogWrite(ENB, 80);
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
  
}else if (analogRead(RIGHT)<=35 && !analogRead(LEFT)<=35) {  
  analogWrite(ENA,80);
  analogWrite(ENB, 80);
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);

}else if (!analogRead(RIGHT)<=35 && analogRead(LEFT)<=35) {  
  analogWrite(ENA, 80);
  analogWrite(ENB, 80);
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
  
}else if (!analogRead(RIGHT)<=35 && !analogRead(LEFT)<=35) {  
 
  Stop();
}

}
void Stop() { 
  analogWrite(ENA, 0);
  analogWrite(ENB, 0);
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
}

void turnRight() {  
  analogWrite(ENA, 100);
  analogWrite(ENB, 100);
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
  
}

void turnLeft() {    
  analogWrite(ENA,100);
  analogWrite(ENB, 100);
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
}

void moveForward() { 
  analogWrite(ENA, 100);
  analogWrite(ENB, 100);
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}
